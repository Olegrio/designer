{"ast":null,"code":"var _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\old_designer\\\\4\\\\designer\\\\src\\\\components\\\\Maket\\\\Maket.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport st from './Maket.module.css';\n\nclass Maket extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props.state;\n  }\n\n  componentWillMount() {\n    let state = this.state;\n    console.log(this.state); //заполняем поля на превью значенияими из state\n\n    let fill_maket = () => {\n      let arrText = Array.from(document.getElementsByTagName('text'));\n      arrText.map(data => document.getElementById(data.id).innerHTML = this.state.render_value(data.id));\n      console.log('fill');\n    };\n\n    let addText = () => {\n      let arrTag = Array.from(document.getElementsByTagName('text'));\n      document.getElementById('tags').innerHTML = '';\n\n      let test = (id, text, idElem) => {\n        document.getElementById(id).insertAdjacentHTML('afterBegin', \"<span class='tag' id='\" + idElem + \"_tag' ><span class='close'>&times;</span><span class='textClose'>\" + text + \"</span></span>\");\n      };\n\n      arrTag.map(data => test('tags', data.innerHTML, data.id));\n      console.log('addText');\n    }; //так себе решение. заполняем поля на превью значенияими из state каждые 500ms \n\n\n    setInterval(function () {\n      fill_maket();\n      console.log('interval');\n    }, 500); //Получаем SVG по ссылке переданной в props и вставляем SVG в блок maket \n\n    fetch(this.props.src).then(function (response) {\n      return response.text();\n    }).then(svg => document.getElementById('maket').innerHTML = svg).then(state.fill_maket()); //По \n\n    document.addEventListener(\"click\", function (e) {\n      console.log(e.target.id);\n      e.target.id !== '' && e.target.id !== \"tag-typer\" && e.target.id !== \"tags\" ? state.createValue(e.target.id) : document.getElementById(\"tag-typer\").disabled = true;\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let name = this.props.name;\n    let src = this.props.src;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"maket\",\n      className: st.maket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" \"));\n  }\n\n}\n\nexport default Maket;","map":{"version":3,"sources":["c:\\xampp\\htdocs\\old_designer\\4\\designer\\src\\components\\Maket\\Maket.js"],"names":["React","$","st","Maket","Component","constructor","props","state","componentWillMount","console","log","fill_maket","arrText","Array","from","document","getElementsByTagName","map","data","getElementById","id","innerHTML","render_value","addText","arrTag","test","text","idElem","insertAdjacentHTML","setInterval","fetch","src","then","response","svg","addEventListener","e","target","createValue","disabled","componentDidMount","render","name","maket"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\n\r\n\r\n\r\nimport st from './Maket.module.css';\r\n\r\n\r\n\r\n\r\n\r\nclass Maket extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n   this.state = this.props.state;\r\n\r\n\r\n\r\n\r\n  }\r\n    \r\n\r\ncomponentWillMount(){\r\n    let state = this.state;\r\nconsole.log(this.state);\r\n    //заполняем поля на превью значенияими из state\r\n    let fill_maket = () =>{\r\n        \r\n        let arrText = Array.from(document.getElementsByTagName('text'));\r\n        arrText.map(data=>document.getElementById(data.id).innerHTML =this.state.render_value(data.id) );\r\n        console.log('fill');\r\n        }\r\n        let addText = () => {\r\n\r\n            let arrTag = Array.from(document.getElementsByTagName('text')) ;\r\n            document.getElementById('tags').innerHTML = '';\r\n            let test = (id,text,idElem)=> {  (document.getElementById(id).insertAdjacentHTML('afterBegin', \"<span class='tag' id='\"+idElem +\"_tag' ><span class='close'>&times;</span><span class='textClose'>\"+text +\"</span></span>\") )};\r\n            arrTag.map(data =>  test('tags',data.innerHTML,data.id))  ;\r\n            console.log('addText')\r\n        }\r\n\r\n        //так себе решение. заполняем поля на превью значенияими из state каждые 500ms \r\n        setInterval(function() {\r\n            fill_maket();\r\n            console.log('interval');\r\n          }, 500);\r\n\r\n   //Получаем SVG по ссылке переданной в props и вставляем SVG в блок maket \r\n    fetch(this.props.src).then(function(response) {return response.text()}).then(svg=> \r\n    document.getElementById('maket').innerHTML = svg).then( state.fill_maket());\r\n  \r\n\r\n\r\n    //По \r\n    document.addEventListener(\"click\", function (e) {\r\n\r\n        console.log(e.target.id);\r\n        \r\n        e.target.id !== '' && e.target.id !== \"tag-typer\" && e.target.id !== \"tags\" ? state.createValue(e.target.id) :document.getElementById(\"tag-typer\").disabled = true ;\r\n        });\r\n        \r\n\r\n        \r\n      \r\n\r\n}\r\n\r\ncomponentDidMount(){\r\n   \r\n}\r\n\r\n\r\n\r\nrender(){\r\n           \r\n    \r\n\r\n    let name = this.props.name;\r\n    let src = this.props.src;\r\n   \r\n    \r\n\r\n\r\n    return (\r\n<div>    \r\n    \r\n<div id='maket' className={st.maket}></div>    \r\n\r\n\r\n<div id=\"inputs\" > </div>\r\n\r\n </div>\r\n    );\r\n}}\r\n\r\n\r\n\r\nexport default Maket;\r\n"]},"metadata":{},"sourceType":"module"}