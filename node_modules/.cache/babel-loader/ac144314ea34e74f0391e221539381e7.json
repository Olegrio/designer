{"ast":null,"code":"var _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\old_designer\\\\4\\\\designer\\\\src\\\\components\\\\Maket\\\\Maket.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport st from './Maket.module.css';\n\nclass Maket extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props.state;\n  }\n\n  componentWillMount() {\n    let state = this.state;\n    console.log(this.state); //заполняем поля на превью значенияими из state\n    // let fill_maket = () =>{\n    //     let arrText = Array.from(document.getElementsByTagName('text'));\n    //     arrText.map(data=>document.getElementById(data.id).innerHTML =this.state.render_value(data.id) );\n    //     console.log('fill');\n    //     }\n    // let addText = () => {\n    //     let arrTag = Array.from(document.getElementsByTagName('text')) ;\n    //     document.getElementById('tags').innerHTML = '';\n    //     let test = (id,text,idElem)=> {  (document.getElementById(id).insertAdjacentHTML('afterBegin', \"<span class='tag' id='\"+idElem +\"_tag' ><span class='close'>&times;</span><span class='textClose'>\"+text +\"</span></span>\") )};\n    //     arrTag.map(data =>  test('tags',data.innerHTML,data.id))  ;\n    //     console.log('addText')\n    // }\n    // так себе решение. заполняем поля на превью значенияими из state каждые 500ms \n    // setInterval(function() {\n    //     fill_maket();\n    //     console.log('interval');\n    //   }, 500);\n    //Получаем SVG по ссылке переданной в props и вставляем SVG в блок maket \n\n    fetch(this.props.src).then(function (response) {\n      return response.text();\n    }).then(svg => document.getElementById('maket').innerHTML = svg).then(state.fill_maket()); //По \n\n    document.addEventListener(\"click\", function (e) {\n      console.log(e.target.id);\n      e.target.id !== '' && e.target.id !== \"tag-typer\" && e.target.id !== \"tags\" ? state.createValue(e.target.id) : document.getElementById(\"tag-typer\").disabled = true;\n    }); //  let createValue = (e) =>{\n    //     document.getElementById(\"tag-typer\").disabled = false;\n    //             let addInputCrValue = (el) =>{\n    //                 document.getElementById('tag-typer').setAttribute('el', el);\n    //                 document.getElementById('tag-typer').setAttribute('class', el);\n    //                 document.getElementById('tag-typer').focus();\n    //                 document.getElementById('tag-typer').value = this.state.render_value(el) ;\n    //                 document.getElementById('tag-typer').oninput = function(e){\n    //                     console.log(e.target.value + ' ' +e.target.classList[0]); \n    //                     //state.add_value(e.target.value,e.target.classList[0]);\n    //                     fill_maket();\n    //                 };\n    //                 }\n    //          addInputCrValue(e);\n    //         }\n  }\n\n  componentDidMount() {}\n\n  render() {\n    let name = this.props.name;\n    let src = this.props.src;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"maket\",\n      className: st.maket,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" \"));\n  }\n\n}\n\nexport default Maket;","map":{"version":3,"sources":["c:\\xampp\\htdocs\\old_designer\\4\\designer\\src\\components\\Maket\\Maket.js"],"names":["React","$","st","Maket","Component","constructor","props","state","componentWillMount","console","log","fetch","src","then","response","text","svg","document","getElementById","innerHTML","fill_maket","addEventListener","e","target","id","createValue","disabled","componentDidMount","render","name","maket"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AAIA,OAAOC,EAAP,MAAe,oBAAf;;AAMA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD,SAAKC,KAAL,GAAa,KAAKD,KAAL,CAAWC,KAAxB;AAKA;;AAGHC,EAAAA,kBAAkB,GAAE;AAChB,QAAID,KAAK,GAAG,KAAKA,KAAjB;AACJE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB,EAFoB,CAGhB;AACA;AAEA;AACA;AACA;AACA;AACI;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEL;;AACCI,IAAAA,KAAK,CAAC,KAAKL,KAAL,CAAWM,GAAZ,CAAL,CAAsBC,IAAtB,CAA2B,UAASC,QAAT,EAAmB;AAAC,aAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,KAAtE,EAAwEF,IAAxE,CAA6EG,GAAG,IAChFC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6CH,GAD7C,EACkDH,IADlD,CACwDN,KAAK,CAACa,UAAN,EADxD,EA1BgB,CA+BhB;;AACAH,IAAAA,QAAQ,CAACI,gBAAT,CAA0B,OAA1B,EAAmC,UAAUC,CAAV,EAAa;AAE5Cb,MAAAA,OAAO,CAACC,GAAR,CAAYY,CAAC,CAACC,MAAF,CAASC,EAArB;AAEAF,MAAAA,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,EAAhB,IAAsBF,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,WAAtC,IAAqDF,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,MAArE,GAA8EjB,KAAK,CAACkB,WAAN,CAAkBH,CAAC,CAACC,MAAF,CAASC,EAA3B,CAA9E,GAA8GP,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCQ,QAArC,GAAgD,IAA9J;AACC,KALL,EAhCgB,CAwCpB;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAIC;;AAEDC,EAAAA,iBAAiB,GAAE,CAElB;;AAIDC,EAAAA,MAAM,GAAE;AAIJ,QAAIC,IAAI,GAAG,KAAKvB,KAAL,CAAWuB,IAAtB;AACA,QAAIjB,GAAG,GAAG,KAAKN,KAAL,CAAWM,GAArB;AAKA,WACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,EAAE,EAAC,OAAR;AAAgB,MAAA,SAAS,EAAEV,EAAE,CAAC4B,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAKA;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALA,CADI;AAUH;;AAvGmC;;AA2GpC,eAAe3B,KAAf","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\n\r\n\r\n\r\nimport st from './Maket.module.css';\r\n\r\n\r\n\r\n\r\n\r\nclass Maket extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n   this.state = this.props.state;\r\n\r\n\r\n\r\n\r\n  }\r\n    \r\n\r\ncomponentWillMount(){\r\n    let state = this.state;\r\nconsole.log(this.state);\r\n    //заполняем поля на превью значенияими из state\r\n    // let fill_maket = () =>{\r\n        \r\n    //     let arrText = Array.from(document.getElementsByTagName('text'));\r\n    //     arrText.map(data=>document.getElementById(data.id).innerHTML =this.state.render_value(data.id) );\r\n    //     console.log('fill');\r\n    //     }\r\n        // let addText = () => {\r\n\r\n        //     let arrTag = Array.from(document.getElementsByTagName('text')) ;\r\n        //     document.getElementById('tags').innerHTML = '';\r\n        //     let test = (id,text,idElem)=> {  (document.getElementById(id).insertAdjacentHTML('afterBegin', \"<span class='tag' id='\"+idElem +\"_tag' ><span class='close'>&times;</span><span class='textClose'>\"+text +\"</span></span>\") )};\r\n        //     arrTag.map(data =>  test('tags',data.innerHTML,data.id))  ;\r\n        //     console.log('addText')\r\n        // }\r\n\r\n        // так себе решение. заполняем поля на превью значенияими из state каждые 500ms \r\n        // setInterval(function() {\r\n        //     fill_maket();\r\n        //     console.log('interval');\r\n        //   }, 500);\r\n\r\n   //Получаем SVG по ссылке переданной в props и вставляем SVG в блок maket \r\n    fetch(this.props.src).then(function(response) {return response.text()}).then(svg=> \r\n    document.getElementById('maket').innerHTML = svg).then( state.fill_maket());\r\n  \r\n\r\n\r\n    //По \r\n    document.addEventListener(\"click\", function (e) {\r\n\r\n        console.log(e.target.id);\r\n        \r\n        e.target.id !== '' && e.target.id !== \"tag-typer\" && e.target.id !== \"tags\" ? state.createValue(e.target.id) :document.getElementById(\"tag-typer\").disabled = true ;\r\n        });\r\n        \r\n        \r\n//  let createValue = (e) =>{\r\n\r\n//     document.getElementById(\"tag-typer\").disabled = false;\r\n//             let addInputCrValue = (el) =>{\r\n//                 document.getElementById('tag-typer').setAttribute('el', el);\r\n//                 document.getElementById('tag-typer').setAttribute('class', el);\r\n//                 document.getElementById('tag-typer').focus();\r\n//                 document.getElementById('tag-typer').value = this.state.render_value(el) ;\r\n\r\n                \r\n//                 document.getElementById('tag-typer').oninput = function(e){\r\n//                     console.log(e.target.value + ' ' +e.target.classList[0]); \r\n                  \r\n//                     //state.add_value(e.target.value,e.target.classList[0]);\r\n//                     fill_maket();\r\n//                 };\r\n//                 }\r\n        \r\n//          addInputCrValue(e);\r\n//         }\r\n        \r\n      \r\n\r\n}\r\n\r\ncomponentDidMount(){\r\n   \r\n}\r\n\r\n\r\n\r\nrender(){\r\n           \r\n    \r\n\r\n    let name = this.props.name;\r\n    let src = this.props.src;\r\n   \r\n    \r\n\r\n\r\n    return (\r\n<div>    \r\n    \r\n<div id='maket' className={st.maket}></div>    \r\n\r\n\r\n<div id=\"inputs\" > </div>\r\n\r\n </div>\r\n    );\r\n}}\r\n\r\n\r\n\r\nexport default Maket;\r\n"]},"metadata":{},"sourceType":"module"}