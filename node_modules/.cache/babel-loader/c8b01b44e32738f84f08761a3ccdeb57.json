{"ast":null,"code":"var _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\old_designer\\\\4\\\\designer\\\\src\\\\components\\\\PreviewMaket\\\\InputMaket\\\\Input.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport './Input.css';\n\nclass Input extends React.Component {\n  componentWillMount() {\n    let arrTag = Array.from(document.getElementsByTagName('text'));\n\n    let test = (id, text, idElement) => {\n      document.getElementById(id).insertAdjacentHTML('afterBegin', \"<span class='tag' id='\" + idElement + \"_tag'><span class='close'>&times;</span><span class='textClose'>\" + text + \"</span></span>\");\n    };\n\n    arrTag.map(data => test('tags', data.innerHTML, data.id));\n  }\n\n  componentDidMount() {\n    let arrTag = Array.from(document.getElementsByTagName('text'));\n  }\n\n  render() {\n    let arrayTag = Array.from(document.getElementsByTagName('text')).map(data => React.createElement(\"span\", {\n      class: \"tag\",\n      style: \"display:none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"span\", {\n      class: \"textClose\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, data.innerHTML))); //let arrayTag = Array.from(document.getElementsByTagName('text')).map((data)=> data.innerHTML);\n\n    let state = this.props.state;\n    $(document).ready(function () {\n      let count = 1;\n      $(\"#tag-typer\").keypress(function (event) {\n        let key = event.which;\n\n        if (key == 13 || key == 44) {\n          event.preventDefault();\n          let tag = $(this).val();\n\n          if (tag.length > 0 && document.getElementById($(this)[0].className + \"_tag\") == undefined) {\n            // && document.getElementById($(this)[0].className +\"_tag\") === undefined\n            $(\"<span class='tag' id='\" + $(this)[0].className + \"_tag' count='\" + count + \"' style='display:none'><span class='close'>&times;</span><span class='textClose'>\" + tag + \"</span></span>\").insertBefore(this).fadeIn(100);\n            $(this).val(\"\");\n            count++;\n          }\n        }\n      });\n      $(\"#tags\").on(\"click\", \".close\", function () {\n        $(this).parent(\"span\").remove();\n      });\n      $(\"#tags\").on(\"click\", \".textClose\", function () {\n        $(this).parent(\"span\").remove();\n      });\n    });\n    return React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"tag-typer\",\n      el: \"\",\n      type: \"text\",\n      placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u0435 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Input;","map":{"version":3,"sources":["c:\\xampp\\htdocs\\old_designer\\4\\designer\\src\\components\\PreviewMaket\\InputMaket\\Input.js"],"names":["React","$","Input","Component","componentWillMount","arrTag","Array","from","document","getElementsByTagName","test","id","text","idElement","getElementById","insertAdjacentHTML","map","data","innerHTML","componentDidMount","render","arrayTag","state","props","ready","count","keypress","event","key","which","preventDefault","tag","val","length","className","undefined","insertBefore","fadeIn","on","parent","remove"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\nimport  './Input.css';\r\n\r\n\r\n\r\n\r\nclass Input extends React.Component{\r\n\r\ncomponentWillMount(){\r\n\r\n\r\n  let arrTag = Array.from(document.getElementsByTagName('text')) ;\r\n  let test = (id,text,idElement)=> { document.getElementById(id).insertAdjacentHTML('afterBegin', \"<span class='tag' id='\"+idElement +\"_tag'><span class='close'>&times;</span><span class='textClose'>\"+text +\"</span></span>\") };\r\n  arrTag.map(data =>  test('tags',data.innerHTML,data.id))  ;\r\n      \r\n}\r\n\r\ncomponentDidMount(){\r\n  let arrTag = Array.from(document.getElementsByTagName('text')) ;\r\n}\r\n  render(){\r\n  \r\n    let arrayTag = Array.from(document.getElementsByTagName('text')).map((data)=> <span class='tag'  style='display:none'><span class='close'>&times;</span><span class='textClose'>{data.innerHTML}</span></span>);\r\n    //let arrayTag = Array.from(document.getElementsByTagName('text')).map((data)=> data.innerHTML);\r\n\r\n    let state = this.props.state;\r\n\r\n      $(document).ready( function() {\r\n       let count = 1;\r\n       $(\"#tag-typer\").keypress( function(event) {\r\n       let key = event.which;\r\n              \r\n\r\n       if (key == 13 || key == 44){\r\n       event.preventDefault();\r\n       let tag = $(this).val();\r\n        \r\n       if(tag.length > 0 && document.getElementById($(this)[0].className +\"_tag\") == undefined ){\r\n       // && document.getElementById($(this)[0].className +\"_tag\") === undefined\r\n                       \r\n       $(\"<span class='tag' id='\"+$(this)[0].className +\"_tag' count='\"+count +\"' style='display:none'><span class='close'>&times;</span><span class='textClose'>\"+tag+\"</span></span>\").insertBefore(this).fadeIn(100);\r\n       $(this).val(\"\");\r\n       count++;\r\n        }\r\n       }\r\n       })\r\n            \r\n      $(\"#tags\").on(\"click\", \".close\", function() {\r\n      $(this).parent(\"span\").remove(); \r\n      });\r\n\r\n      $(\"#tags\").on(\"click\", \".textClose\", function() {\r\n      $(this).parent(\"span\").remove();\r\n      });   \r\n   })\r\n    \r\n    \r\n  \r\n        \r\nreturn(\r\n\r\n   \r\n\r\n\r\n\r\n<label>\r\n<div id=\"tags\">\r\n\r\n\r\n  <input id=\"tag-typer\" el='' type=\"text\" placeholder=\"Выберите поле \"/>\r\n  \r\n</div>\r\n</label>\r\n\r\n)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}